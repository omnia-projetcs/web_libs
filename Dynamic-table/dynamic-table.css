:root {
    /* Light Theme (Defaults - many are implicit or defined ad-hoc below, formalizing a few) */
    --dt-light-bg-primary: #fff;
    --dt-light-bg-secondary: #f9fafa;
    --dt-light-bg-tertiary: #f0f5f8; /* For hovered elements */
    --dt-light-text-primary: #2c3e50; /* Darker text for headers */
    --dt-light-text-secondary: #555;  /* Lighter text for body and controls */
    --dt-light-border-primary: #e0e0e0;
    --dt-light-border-secondary: #ccc;
    --dt-light-accent-primary: #3498db; /* Blue */
    --dt-light-accent-secondary: #28a745; /* Green for positive */
    --dt-light-accent-negative: #dc3545; /* Red for negative */
    --dt-light-input-bg: #fff;
    --dt-light-input-border: #ccc;
    --dt-light-input-focus-shadow: rgba(52, 152, 219, 0.2);
    --dt-light-button-bg: #fff;
    --dt-light-button-hover-bg: #3498db;
    --dt-light-button-text: #3498db;
    --dt-light-button-hover-text: #fff;
    --dt-light-header-bg: #ecf0f1;
    --dt-light-header-text: #2c3e50;
    --dt-light-header-border: #bdc3c7;
}

.dt-dark-mode {
    --dt-dark-bg-primary: #1e1e1e;
    --dt-dark-bg-secondary: #2a2a2a;
    --dt-dark-bg-tertiary: #333333; /* For hovered elements or accents */
    --dt-dark-text-primary: #e0e0e0;
    --dt-dark-text-secondary: #b0b0b0;
    --dt-dark-border-primary: #444444;
    --dt-dark-border-secondary: #555555;
    --dt-dark-accent-primary: #5fa8d3; /* A light blue */
    --dt-dark-accent-secondary: #6faa60; /* A light green for positive */
    --dt-dark-accent-negative: #d35f5f; /* A light red for negative */
    --dt-dark-input-bg: #252525;
    --dt-dark-input-border: #484848;
    --dt-dark-input-focus-shadow: rgba(95, 168, 211, 0.3);
    --dt-dark-button-bg: #383838;
    --dt-dark-button-hover-bg: #454545;
    --dt-dark-button-text: var(--dt-dark-text-primary);
    --dt-dark-button-hover-text: var(--dt-dark-accent-primary);
    --dt-dark-header-bg: #252525; /* Darker header for dark mode */
    --dt-dark-header-text: #e0e0e0;
    --dt-dark-header-border: #3a3a3a;
}

/**
 File dynamic-table.css
 Description Light and fast html table
 Author Nicolas HANTEVILLE
 Version: 0.11
 
 Copyright 2025 Nicolas HANTEVILLE
 link: https://github.com/omnia-projetcs/web_libs
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/* Global container generated by the script */
.dynamic-table-wrapper {
    --border-radius: 4px; /* Define the radius variable */
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    background-color: var(--dt-light-bg-primary, #fff); /* Default to light */
    /* padding: 20px 30px; */
    /* border-radius: 8px; */
    /* box-shadow: 0 2px 10px rgba(0,0,0,0.05); */
    /* margin-bottom: 20px; */ /* Margin managed by the parent HTML container if needed */
}

/* --- Table Controls (top part) --- */
.dynamic-table-controls {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end; 
    gap: 15px;
    margin-bottom: 20px; /* Internal margin between controls and table */
    padding-bottom: 20px; /* Space before the border */
    border-bottom: 1px solid var(--dt-light-border-primary, #e0e0e0); /* Visual separator */
}

/* Order for control elements - REMOVED */
/* .dynamic-table-search-control { order: 1; } */
/* .dynamic-table-filter-control { order: 2; } */
/* .dynamic-table-results-info { order: 3; } */
/* .dynamic-table-column-selector { order: 4; } */


.dynamic-table-controls label {
    display: block;
    margin-bottom: 5px;
    font-size: 0.9rem;
    color: var(--dt-light-text-secondary, #555);
    font-weight: 500;
}

.dynamic-table-controls input[type="search"] {
    padding: 8px 12px;
    border: 1px solid var(--dt-light-input-border, #ccc);
    background-color: var(--dt-light-input-bg, #fff);
    color: var(--dt-light-text-secondary, #555);
    border-radius: 4px;
    font-size: 1rem;
    min-width: 200px; 
    box-sizing: border-box;
}
.dynamic-table-controls input[type="search"]:focus {
     outline: none;
     border-color: var(--dt-light-accent-primary, #3498db);
     box-shadow: 0 0 0 2px var(--dt-light-input-focus-shadow, rgba(52, 152, 219, 0.2));
}

.dynamic-table-results-info {
    font-size: 0.9rem;
    color: var(--dt-light-text-secondary, #555);
    text-align: right;
    /* margin-left: auto; */ /* This is now handled by the right-controls-group */
    padding-bottom: 8px; /* Align with input bottoms if align-items: flex-end is on parent */
}
.dynamic-table-results-info strong {
    font-weight: bold;
}

/* Common style for ALL selects in the library */
.dt-common-select {
    padding: 8px 12px;
    border: 1px solid var(--dt-light-input-border, #ccc);
    border-radius: 4px;
    font-size: 1rem; 
    box-sizing: border-box;
    background-color: var(--dt-light-input-bg, #fff); 
    color: var(--dt-light-text-secondary, #555);
    /* Native browser appearance for the arrow, or custom styling if desired */
}

.dt-common-select:focus {
     outline: none;
     border-color: var(--dt-light-accent-primary, #3498db); 
     box-shadow: 0 0 0 2px var(--dt-light-input-focus-shadow, rgba(52, 152, 219, 0.2)); 
}

/* Specific styles for selects in the top control bar (filters) */
.dynamic-table-filter-control .dt-common-select {
    min-width: 200px; 
}


/* --- Table --- */
.dynamic-table-scroll-wrapper {
    overflow-x: auto; /* Allows horizontal scroll on small screens */
    /* overflow-y is managed by JS if tableMaxHeight is defined.
       Styles for sticky header will apply if overflow-y is 'auto' or 'scroll'. */
}

.dynamic-table {
    width: 100%;
    border-collapse: collapse;
    /* The margin-bottom of the table itself is removed, 
       spacing after the table will be managed by .dynamic-table-pagination if it exists,
       or by the parent container if there's no pagination. */
}

/* Styles for the fixed (sticky) header */
.dynamic-table thead th {
    background-color: var(--dt-light-header-bg, #ecf0f1); /* Background color essential for sticky */
    color: var(--dt-light-header-text, #2c3e50);
    padding: 12px 15px;
    text-align: left;
    font-weight: 600;
    border-bottom: 2px solid var(--dt-light-header-border, #bdc3c7);
    white-space: nowrap;
    position: sticky;
    top: 0;
    z-index: 1; /* A z-index of 1 is often sufficient if no other z-index interferes */
}

/* Optional: add a subtle shadow under the fixed header for better distinction when content scrolls */
.dynamic-table-scroll-wrapper[style*="overflow-y: auto"] thead th,
.dynamic-table-scroll-wrapper[style*="overflow-y: scroll"] thead th {
    box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.12);
}


.dynamic-table thead th.sortable {
    cursor: pointer;
    user-select: none;
}

.dynamic-table thead th .sort-arrow {
    font-size: 0.8em;
    margin-left: 6px;
    opacity: 0.7;
    display: inline-block;
    width: 1em;
    text-align: center;
}
.dynamic-table thead th .sort-arrow.asc::after { content: '▲'; }
.dynamic-table thead th .sort-arrow.desc::after { content: '▼'; }
.dynamic-table thead th.sortable:hover {
    background-color: var(--dt-light-bg-tertiary, #dde4e6); /* Slightly darker for hover */
}

/* Styles for header text and sort arrow alignment */
.dt-title-line {
    display: flex;
    align-items: center;
    /* justify-content: space-between; /* Alternative: pushes arrow to far right */
}

.dt-header-text {
    /* flex-grow: 1; /* Uncomment if using space-between on title-line and text needs to expand */
    /* padding-right: 5px; /* Optional: space if arrow is too close */
}
/* End of styles for header text and sort arrow */

/* --- Header Filter Styles --- */
.dt-header-filter-placeholder {
    margin-top: 8px; /* Increased space for better visual separation */
    /* No other specific alignment needed yet, parent th handles text-align. */
}

.dt-header-filter-input {
    width: 100%;
    padding: 6px 8px;
    border: 1px solid var(--dt-light-input-border, #ccc);
    background-color: var(--dt-light-input-bg, #fff);
    color: var(--dt-light-text-secondary, #555);
    border-radius: 3px;
    box-sizing: border-box;
    font-size: 0.9rem;
    font-family: inherit; /* Ensure consistent font */
}
.dt-header-filter-input:focus {
    outline: none;
    border-color: var(--dt-light-accent-primary, #3498db);
    box-shadow: 0 0 0 2px var(--dt-light-input-focus-shadow, rgba(52, 152, 219, 0.2));
}

.dt-header-filter-select {
    width: 100%;
    padding: 6px 8px;
    border: 1px solid var(--dt-light-input-border, #ccc);
    background-color: var(--dt-light-input-bg, #fff);
    color: var(--dt-light-text-secondary, #555);
    border-radius: 3px;
    box-sizing: border-box;
    font-size: 0.9rem;
    font-family: inherit; /* Ensure consistent font */
}
.dt-header-filter-select:focus {
    outline: none;
    border-color: var(--dt-light-accent-primary, #3498db);
    box-shadow: 0 0 0 2px var(--dt-light-input-focus-shadow, rgba(52, 152, 219, 0.2));
}
/* --- End Header Filter Styles --- */

/* --- Header Multi-select Filter --- */
.dt-header-multiselect {
    position: relative; /* For dropdown positioning */
    width: 100%;
    border: 1px solid var(--dt-light-input-border, #ccc);
    border-radius: 3px;
    background-color: var(--dt-light-input-bg, #fff);
    color: var(--dt-light-text-secondary, #555);
    font-size: 0.9rem;
    box-sizing: border-box;
    cursor: pointer;
    font-family: inherit;
}

.dt-multiselect-trigger {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 6px 8px;
    min-height: calc(1.8em + 2px + 2px); /* Approx height of other inputs, (0.9em * 2 lines) + padding + border */
}

.dt-multiselect-value {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex-grow: 1;
}

.dt-multiselect-arrow {
    margin-left: 8px;
    font-size: 0.8em;
}

.dt-multiselect-dropdown {
    position: absolute;
    top: 100%;
    left: -1px; /* Align with border */
    right: -1px; /* Align with border */
    background-color: var(--dt-light-input-bg, #fff);
    border: 1px solid var(--dt-light-input-border, #ccc);
    border-top: none;
    border-radius: 0 0 3px 3px;
    max-height: 200px;
    overflow-y: auto;
    z-index: 1010; /* Above table content, potentially below global column selector */
    box-sizing: border-box;
    padding: 4px 0;
}

.dt-multiselect-item {
    display: flex;
    align-items: center;
    padding: 6px 10px;
    cursor: pointer;
    user-select: none; /* Prevent text selection when clicking */
}

.dt-multiselect-item:hover {
    background-color: var(--dt-light-bg-tertiary, #f0f5f8);
}

.dt-multiselect-item input[type="checkbox"] {
    margin-right: 8px;
    cursor: pointer;
}

.dt-multiselect-item label {
    font-weight: normal;
    color: var(--dt-light-text-secondary, #333);
    cursor: pointer;
    margin-bottom: 0; /* Override general label styles if any */
    flex-grow: 1; /* Allow label to take space */
}
/* --- End Header Multi-select Filter --- */


/* --- Global Multi-select Filter (within .dynamic-table-filter-control) --- */
.dynamic-table-filter-control .dt-global-multiselect {
    min-width: 200px; /* Match other global selects/custom selects */
    /* Uses .dt-custom-select for base structure, trigger, value, arrow, options */
}

/* Ensure item styling is applied if not covered by generic .dt-custom-options items */
/* These are identical to .dt-multiselect-item from header, so could be combined if desired */
.dt-global-multiselect .dt-custom-options .dt-multiselect-item {
    display: flex;
    align-items: center;
    padding: 6px 10px;
    cursor: pointer;
    user-select: none;
}
.dt-global-multiselect .dt-custom-options .dt-multiselect-item:hover {
    background-color: var(--dt-light-bg-tertiary, #f0f5f8);
}
.dt-global-multiselect .dt-custom-options .dt-multiselect-item input[type="checkbox"] {
    margin-right: 8px;
    cursor: pointer;
}
.dt-global-multiselect .dt-custom-options .dt-multiselect-item label {
    font-weight: normal;
    color: var(--dt-light-text-secondary, #333);
    cursor: pointer;
    margin-bottom: 0; 
    flex-grow: 1;
}
/* --- End Global Multi-select Filter --- */


.dynamic-table thead th:first-child {
    border-top-left-radius: var(--border-radius); /* Or a specific pixel value like 4px */
}

.dynamic-table thead th:last-child {
    border-top-right-radius: var(--border-radius); /* Or a specific pixel value like 4px */
}

.dynamic-table tbody td {
    padding: 10px 15px;
    border-bottom: 1px solid var(--dt-light-border-primary, #e0e0e0);
    color: var(--dt-light-text-secondary, #555);
    /* vertical-align: middle; */ /* Can be overridden by dt-chart-cell */
}

/* Style for cells containing charts for vertical alignment */
.dynamic-table tbody td.dt-chart-cell {
    padding: 2px 5px; /* Keep padding */
    /* display: flex; align-items: center; justify-content: center; -- REMOVED to allow standard cell height behavior */
    vertical-align: middle; /* Good default for table cell content */
}

.dt-chart-canvas-wrapper {
    display: flex;
    align-items: center;    /* Vertically center the canvas */
    justify-content: center; /* Horizontally center the canvas */
    width: 100%;
    height: 100%; /* Takes full height of the cell, critical for centering in a stretched cell */
}

.dynamic-table tbody td.dt-chart-cell canvas {
    max-width: 100%; /* Ensure the canvas does not exceed the cell */
    /* max-height is implicitly managed by the canvas height defined in JS */
}


/* Classes for coloring percentage values */
.dynamic-table tbody td.dt-value-positive {
    color: var(--dt-light-accent-secondary, #28a745); /* Green */
    font-weight: bold; /* Optional: make more visible */
}
.dynamic-table tbody td.dt-value-negative {
    color: var(--dt-light-accent-negative, #dc3545); /* Red */
    font-weight: bold; /* Optional */
}


.dynamic-table tbody tr:nth-child(even) {
    background-color: var(--dt-light-bg-secondary, #f9fafa);
}
/* The background color of the even row might interfere with the dt-value text color.
   If so, you might need to make the background of dt-value cells transparent.
   Ex: .dynamic-table tbody tr:nth-child(even) td.dt-value-positive,
       .dynamic-table tbody tr:nth-child(even) td.dt-value-negative {
           background-color: transparent !important;
       }
*/


.dynamic-table tbody tr:hover {
    background-color: var(--dt-light-bg-tertiary, #f0f5f8);
}

.dynamic-table .message-row td {
    text-align: center;
    padding: 30px;
    font-style: italic;
    color: var(--dt-light-text-secondary, #777);
    background-color: var(--dt-light-bg-primary, #fff) !important; 
}

/* --- Pagination --- */
.dynamic-table-pagination {
    display: flex;
    justify-content: space-between; /* Aligns selector to the left and buttons/info to the right */
    align-items: center;
    gap: 10px; /* Space between groups of elements (left and right) */
    margin-top: 20px; /* Margin between the table (or its scroll wrapper) and pagination */
    padding-top: 20px;
    border-top: 1px solid var(--dt-light-border-primary, #e0e0e0); /* Visual separator */
}

/* Container for the rows/page selector (left part of pagination) */
.dynamic-table-pagination-left {
    display: flex;
    align-items: center;
}

/* Container for Previous, Page X/Y, Next buttons (right/center part of pagination) */
.dynamic-table-main-pagination-controls {
    display: flex;
    align-items: center;
    gap: 10px; /* Space between buttons and page info */
    /* margin-left: auto; */ /* Uncomment if you want to push this group completely to the right,
                                but space-between on the parent should suffice. */
}


.dynamic-table-rows-per-page-control {
    display: flex;
    align-items: center;
    gap: 5px; 
}

.dynamic-table-rows-per-page-control label {
    margin-bottom: 0; 
    margin-right: 5px; 
    font-size: 0.9rem;
    color: var(--dt-light-text-secondary, #555);
    font-weight: normal; 
}

.dynamic-table-rows-per-page-control .dt-common-select { /* Specific style for the select IN pagination */
    min-width: auto; 
    width: auto; /* Allows the select to take the width of its content */
    padding: 6px 8px; 
    font-size: 0.9rem; 
}

.dynamic-table-pagination button {
    padding: 8px 15px;
    border: 1px solid var(--dt-light-border-secondary, #ccc);
    border-radius: 4px;
    background-color: var(--dt-light-button-bg, #fff);
    color: var(--dt-light-button-text, #3498db);
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.dynamic-table-pagination button:hover:not(:disabled) {
    background-color: var(--dt-light-button-hover-bg, #3498db);
    color: var(--dt-light-button-hover-text, #fff);
    border-color: var(--dt-light-accent-primary, #3498db);
}

.dynamic-table-pagination button:disabled {
    color: var(--dt-light-text-secondary, #aaa);
    cursor: not-allowed;
    background-color: var(--dt-light-bg-tertiary, #f0f0f0); /* Use a light tertiary bg for disabled */
    border-color: var(--dt-light-border-primary, #ddd);
}

.dynamic-table-pagination span { /* Page info */
    font-size: 0.9rem;
    color: var(--dt-light-text-secondary, #555);
    margin: 0 5px; /* Reduce margin if needed */
    white-space: nowrap;
}

/* --- Responsive --- */
@media (max-width: 768px) {
    .dynamic-table-controls {
        flex-direction: column;
        align-items: stretch;
    }
    .dynamic-table-controls input[type="search"],
    .dynamic-table-controls .dt-common-select, /* Targets the common class for filters */
    .dynamic-table-controls .dt-custom-select, /* Ensure custom selects also go full width */
    .dynamic-table-controls .dt-column-selector-button { /* Ensure new button also goes full width */
        min-width: 0;
        width: 100%;
    }
    .dynamic-table-results-info {
        text-align: center;
        margin-top: 10px;
        margin-left: 0;
    }

    .dynamic-table-pagination {
        flex-direction: column; /* Stack pagination elements on mobile */
        align-items: center; /* Center stacked elements */
    }
    .dynamic-table-pagination-left,
    .dynamic-table-main-pagination-controls {
        margin-bottom: 10px; /* Space between sections if stacked */
    }
    .dynamic-table-main-pagination-controls {
         justify-content: center; /* Center Previous/Next buttons and page info */
    }
}

/* === Flag Icon Styles === */

/* Default styling for flag icons provided by flag-icon-css */
/* This ensures alignment and spacing for flags within table cells */
.dynamic-table tbody td span.fi {
    margin-right: 8px;
    display: inline-block; /* Or 'inline-flex' for better alignment with text */
    vertical-align: middle; /* Align icon with text */
}

/* Styling for <option> elements with Unicode flags can be done directly on the option,
   or might rely on browser default rendering for text within options.
   If specific alignment or font for Unicode flags in options is needed,
   it could be added here, targeting:
   .dynamic-table-filter-control select option { ... }
   However, for now, we rely on default browser handling for text in options. */

/* === Custom Dropdown Styles for Flag Filters === */

.dt-custom-select {
    position: relative; /* For positioning the options list */
    min-width: 200px; /* Default for other custom selects if any, or standard filters */
    border: 1px solid var(--dt-light-input-border, #ccc);
    border-radius: 4px;
    background-color: var(--dt-light-input-bg, #fff);
    color: var(--dt-light-text-secondary, #555);
    font-size: 1rem;
    box-sizing: border-box;
    cursor: pointer;
    user-select: none; /* Prevent text selection */
}

.dt-custom-select:focus { /* For accessibility, though direct focus might be on a child */
    outline: none;
    border-color: var(--dt-light-accent-primary, #3498db);
    box-shadow: 0 0 0 2px var(--dt-light-input-focus-shadow, rgba(52, 152, 219, 0.2));
}

.dt-custom-select-trigger {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 12px; /* Same as .dt-common-select inputs */
}

.dt-custom-select-value {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex-grow: 1; /* Allow value to take available space */
    display: flex; /* For aligning content like text or a single icon */
    align-items: center; /* Vertically align content */
    /* justify-content: flex-start; by default for text */
}

/* Styling for the flag icon itself if it's placed directly in dt-custom-select-value */
.dt-custom-select-value span.fi {
    /* margin-right: 0; */ /* Reset by more specific rule below if needed */
    vertical-align: middle; /* Align if there was text or for consistency */
    /* Centering is handled by parent's justify-content if it's the only child */
}


.dt-custom-arrow {
    margin-left: 10px; /* Provides space between value and arrow */
    font-size: 0.8em;
}

.dt-custom-options {
    position: absolute;
    top: 100%; /* Position below the trigger */
    left: 0;
    right: 0;
    background-color: var(--dt-light-input-bg, #fff);
    border: 1px solid var(--dt-light-input-border, #ccc);
    border-top: none; /* Avoid double border with select box */
    border-radius: 0 0 4px 4px;
    max-height: 200px; /* Prevent overly long lists */
    overflow-y: auto;
    z-index: 1000; /* Ensure it's above other content */
    box-sizing: border-box;
}

/* Individual option styling */
.dt-custom-option {
    padding: 6px 10px; /* Slightly reduced padding */
    cursor: pointer;
    display: flex; 
    align-items: center; /* Vertically align content */
    justify-content: flex-start; /* Default for text options */
    min-height: 2em; /* Ensure a decent clickable height */
}

.dt-custom-option:hover {
    background-color: var(--dt-light-bg-tertiary, #f0f5f8); /* Similar to table row hover */
}

.dt-custom-option.selected { /* If we add a class for the selected one */
    background-color: var(--dt-light-bg-tertiary, #e0eaf1); /* Use tertiary for selected as well */
    font-weight: bold;
}

/* Styling for flag icons within custom options */
.dt-custom-option span.fi {
    /* flag-icon-css provides base size. Adjust if needed: */
    /* font-size: 1.2em; */ 
    margin-right: 5px; /* Space if there were text next to it, not typical for centered flags */
}

/* Hide the options list by default (JS will toggle display: block/flex) */
.dt-custom-options {
    display: none;
}
.dt-custom-select.open .dt-custom-options { /* Class 'open' will be toggled by JS */
    display: block;
}


/* Specific adjustments for FLAG custom filters */
.dynamic-table-filter-control.custom-flag-filter .dt-custom-select {
    min-width: 0; /* Override the generic min-width */
    width: 80px;  /* Narrower for flag display */
}

.dynamic-table-filter-control.custom-flag-filter .dt-custom-select-trigger .dt-custom-select-value {
    justify-content: center; /* Center the flag icon */
    flex-grow: 1; /* Ensure it takes space before arrow */
}
.dynamic-table-filter-control.custom-flag-filter .dt-custom-select-trigger .dt-custom-select-value span.fi {
    margin-right: 0; /* Remove margin, as it's centered */
}

.dynamic-table-filter-control.custom-flag-filter .dt-custom-option {
    padding: 6px 8px; /* Reduced horizontal padding for narrower dropdown */
    justify-content: center; /* Center flag icon in options */
}

.dynamic-table-filter-control.custom-flag-filter .dt-custom-option span.fi {
    margin-right: 0; /* No text expected next to a centered flag */
}


/* === Column Visibility Selector Styles === */
.dynamic-table-column-selector {
    position: relative; /* For positioning the dropdown */
    /* margin-left: auto; /* REMOVED - Now handled by parent group */ */
    /* No specific min-width, it will be defined by its content (button) */
}

/* Group for right-aligned controls */
.dynamic-table-right-controls-group {
    margin-left: auto; /* This pushes the whole group to the right */
    display: flex;
    align-items: center; 
    gap: 15px; /* Match parent gap for consistency */
}

.dt-column-selector-button {
    padding: 8px 12px; /* Similar to search input and common select */
    border: 1px solid var(--dt-light-input-border, #ccc);
    border-radius: 4px;
    background-color: var(--dt-light-input-bg, #fff);
    color: var(--dt-light-text-secondary, #555); /* Standard text color for controls */
    cursor: pointer;
    font-size: 1rem; /* Match other controls */
    font-family: inherit; /* Ensure font consistency */
    transition: border-color 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease, color 0.2s ease;
}

.dt-column-selector-button:hover {
    border-color: var(--dt-light-border-secondary, #aaa); /* Darker border on hover */
}

.dt-column-selector-button:focus {
    outline: none;
    border-color: var(--dt-light-accent-primary, #3498db);
    box-shadow: 0 0 0 2px var(--dt-light-input-focus-shadow, rgba(52, 152, 219, 0.2));
}

.dt-column-selector-dropdown {
    position: absolute;
    top: 100%; /* Position below the button */
    right: 0; 
    /* If the button might be close to the right edge, 'right: 0;' might be better,
       or JS positioning. For now, left: 0 is standard. */
    background-color: var(--dt-light-input-bg, #fff);
    border: 1px solid var(--dt-light-border-secondary, #ccc);
    border-top-color: var(--dt-light-border-primary, #ddd); /* Slightly lighter top border for separation */
    border-radius: 0 0 4px 4px; /* Rounded bottom corners */
    box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Standard shadow */
    z-index: 1050; /* Higher than sticky header and custom flag dropdown */
    min-width: 200px; /* Ensure a reasonable width */
    max-height: 250px; /* Limit height for long lists */
    overflow-y: auto;
    padding: 5px 0; /* Padding top/bottom for the list */
    /* display: none; is handled by JS inline style */
}

.dt-column-selector-item {
    padding: 8px 12px;
    display: flex; /* Use flexbox to align children (checkbox and label) */
    align-items: center; /* Vertically center checkbox and label */
}

.dt-column-selector-item:hover {
    background-color: var(--dt-light-bg-tertiary, #f0f5f8); /* Consistent hover color */
}

.dt-column-selector-item label {
    /* display: flex; and align-items: center; are not strictly needed here if label only contains text */
    /* However, keeping them doesn't harm and could be useful if label content becomes complex later */
    display: flex; 
    align-items: center;
    font-weight: normal; /* Override general label bolding if any */
    font-size: 0.95rem; /* Slightly smaller for dropdown items */
    color: var(--dt-light-text-secondary, #333);
    cursor: pointer;
    margin-bottom: 0; /* Reset from general label style */
}

.dt-column-selector-item input[type="checkbox"] {
    margin-right: 8px; /* Space between checkbox and label text */
    cursor: pointer;
    /* vertical-align: middle; /* Not needed due to parent flex align-items: center */ */
    /* Consider custom styling for checkboxes for better cross-browser consistency if needed */
}

/* Responsive adjustments for the column selector dropdown */
@media (max-width: 768px) {
    .dynamic-table-column-selector {
        width: 100%; /* Make the container full width if button is full width */
    }
    /* The button .dt-column-selector-button is already set to width: 100% in the main responsive block */
    
    .dt-column-selector-dropdown {
        width: 100%; /* Dropdown can also be full width or adapt */
        /* Or, if preferred, it can remain a fixed width but might require JS to position
           if it would overflow the screen. Full width is often simpler on mobile. */
        min-width: 0; /* Override min-width for full-width behavior */
        left: 0;
        right: 0; /* Ensure it spans full width if parent is full width */
        box-sizing: border-box;
    }
}

/* === Dark Mode Styles === */
.dt-dark-mode.dynamic-table-wrapper {
    background-color: var(--dt-dark-bg-primary);
}

.dt-dark-mode .dynamic-table-controls {
    border-bottom: 1px solid var(--dt-dark-border-primary);
}

.dt-dark-mode .dynamic-table-controls label {
    color: var(--dt-dark-text-secondary);
}

.dt-dark-mode .dynamic-table-controls input[type="search"] {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dynamic-table-controls input[type="search"]:focus {
     border-color: var(--dt-dark-accent-primary);
     box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}

.dt-dark-mode .dynamic-table-results-info {
    color: var(--dt-dark-text-secondary);
}

/* Common style for ALL selects in dark mode */
.dt-dark-mode .dt-common-select {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dt-common-select:focus {
     border-color: var(--dt-dark-accent-primary);
     box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}


/* Table dark mode */
.dt-dark-mode .dynamic-table thead th {
    background-color: var(--dt-dark-header-bg);
    color: var(--dt-dark-header-text);
    border-bottom: 2px solid var(--dt-dark-header-border);
}
.dt-dark-mode .dynamic-table-scroll-wrapper[style*="overflow-y: auto"] thead th,
.dt-dark-mode .dynamic-table-scroll-wrapper[style*="overflow-y: scroll"] thead th {
    box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.4); /* Darker shadow for dark mode */
}
.dt-dark-mode .dynamic-table thead th.sortable:hover {
    background-color: var(--dt-dark-bg-tertiary);
}

/* Header Filter Dark Mode */
.dt-dark-mode .dt-header-filter-input {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dt-header-filter-input:focus {
    border-color: var(--dt-dark-accent-primary);
    box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}
.dt-dark-mode .dt-header-filter-select { /* This is a dt-common-select, already styled */
    /* border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary); */
}
/* .dt-dark-mode .dt-header-filter-select:focus {
    border-color: var(--dt-dark-accent-primary);
    box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
} */

/* Header Multi-select Filter Dark Mode */
.dt-dark-mode .dt-header-multiselect {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dt-multiselect-dropdown {
    background-color: var(--dt-dark-input-bg); /* Dropdown bg */
    border: 1px solid var(--dt-dark-border-secondary); /* Slightly different border for dropdown */
    border-top: none;
}
.dt-dark-mode .dt-multiselect-item:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-multiselect-item label {
    color: var(--dt-dark-text-primary);
}
/* Checkbox styling in multiselect might need attention if native ones look bad on dark bg */
/* .dt-dark-mode .dt-multiselect-item input[type="checkbox"] { ... } */

/* Global Multi-select Filter (dark mode) */
/* .dt-global-multiselect uses .dt-custom-select, so its dark mode is handled by .dt-dark-mode .dt-custom-select */
.dt-dark-mode .dt-global-multiselect .dt-custom-options .dt-multiselect-item:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-global-multiselect .dt-custom-options .dt-multiselect-item label {
    color: var(--dt-dark-text-primary);
}


.dt-dark-mode .dynamic-table tbody td {
    border-bottom: 1px solid var(--dt-dark-border-primary);
    color: var(--dt-dark-text-secondary);
}
.dt-dark-mode .dynamic-table tbody td.dt-value-positive {
    color: var(--dt-dark-accent-secondary);
}
.dt-dark-mode .dynamic-table tbody td.dt-value-negative {
    color: var(--dt-dark-accent-negative);
}
.dt-dark-mode .dynamic-table tbody tr:nth-child(even) {
    background-color: var(--dt-dark-bg-secondary);
}
.dt-dark-mode .dynamic-table tbody tr:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dynamic-table .message-row td {
    color: var(--dt-dark-text-secondary);
    background-color: var(--dt-dark-bg-primary) !important;
}

/* Pagination dark mode */
.dt-dark-mode .dynamic-table-pagination {
    border-top: 1px solid var(--dt-dark-border-primary);
}
.dt-dark-mode .dynamic-table-rows-per-page-control label {
    color: var(--dt-dark-text-secondary);
}
/* .dt-dark-mode .dynamic-table-rows-per-page-control .dt-common-select is already handled */

.dt-dark-mode .dynamic-table-pagination button {
    border: 1px solid var(--dt-dark-border-secondary);
    background-color: var(--dt-dark-button-bg);
    color: var(--dt-dark-button-text);
}
.dt-dark-mode .dynamic-table-pagination button:hover:not(:disabled) {
    background-color: var(--dt-dark-button-hover-bg);
    color: var(--dt-dark-button-hover-text);
    border-color: var(--dt-dark-accent-primary);
}
.dt-dark-mode .dynamic-table-pagination button:disabled {
    color: var(--dt-dark-text-secondary);
    background-color: var(--dt-dark-bg-tertiary); /* Use a dark tertiary bg for disabled */
    border-color: var(--dt-dark-border-primary);
    opacity: 0.5; /* Make it more obviously disabled */
}
.dt-dark-mode .dynamic-table-pagination span {
    color: var(--dt-dark-text-secondary);
}

/* Custom Dropdown Dark Mode (for flag filters, global multiselects) */
.dt-dark-mode .dt-custom-select {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary); /* Text for the trigger value */
}
.dt-dark-mode .dt-custom-select:focus {
    border-color: var(--dt-dark-accent-primary);
    box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}
.dt-dark-mode .dt-custom-options {
    background-color: var(--dt-dark-input-bg); /* Dropdown bg */
    border: 1px solid var(--dt-dark-border-secondary); /* Slightly different for dropdown */
    border-top: none;
}
.dt-dark-mode .dt-custom-option {
    color: var(--dt-dark-text-primary); /* Text color for options */
}
.dt-dark-mode .dt-custom-option:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-custom-option.selected {
    background-color: var(--dt-dark-bg-tertiary); /* Or a slightly different shade if needed */
    /* font-weight: bold; is already applied */
}
/* Unicode flags in .dt-custom-option might need color adjustment if they are text-based */
/* span.fi (image based flags) should be fine */


/* Column Visibility Selector Dark Mode */
.dt-dark-mode .dt-column-selector-button {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dt-column-selector-button:hover {
    border-color: var(--dt-dark-border-secondary); /* Darker border on hover */
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-column-selector-button:focus {
    border-color: var(--dt-dark-accent-primary);
    box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}
.dt-dark-mode .dt-column-selector-dropdown {
    background-color: var(--dt-dark-input-bg);
    border: 1px solid var(--dt-dark-border-secondary);
    border-top-color: var(--dt-dark-border-primary);
    box-shadow: 0 4px 8px rgba(0,0,0,0.25); /* Darker shadow for dark mode */
}
.dt-dark-mode .dt-column-selector-item:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-column-selector-item label {
    color: var(--dt-dark-text-primary);
}
/* Checkboxes in .dt-column-selector-item might need specific styling for dark mode */
/* .dt-dark-mode .dt-column-selector-item input[type="checkbox"] { ... } */

/* === Dark Mode Styles === */
.dt-dark-mode.dynamic-table-wrapper {
    background-color: var(--dt-dark-bg-primary);
}

.dt-dark-mode .dynamic-table-controls {
    border-bottom: 1px solid var(--dt-dark-border-primary);
}

.dt-dark-mode .dynamic-table-controls label {
    color: var(--dt-dark-text-secondary);
}

.dt-dark-mode .dynamic-table-controls input[type="search"] {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dynamic-table-controls input[type="search"]:focus {
     border-color: var(--dt-dark-accent-primary);
     box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}

.dt-dark-mode .dynamic-table-results-info {
    color: var(--dt-dark-text-secondary);
}

/* Common style for ALL selects in dark mode */
.dt-dark-mode .dt-common-select {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dt-common-select:focus {
     border-color: var(--dt-dark-accent-primary);
     box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}


/* Table dark mode */
.dt-dark-mode .dynamic-table thead th {
    background-color: var(--dt-dark-header-bg);
    color: var(--dt-dark-header-text);
    border-bottom: 2px solid var(--dt-dark-header-border);
}
.dt-dark-mode .dynamic-table-scroll-wrapper[style*="overflow-y: auto"] thead th,
.dt-dark-mode .dynamic-table-scroll-wrapper[style*="overflow-y: scroll"] thead th {
    box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.4); /* Darker shadow for dark mode */
}
.dt-dark-mode .dynamic-table thead th.sortable:hover {
    background-color: var(--dt-dark-bg-tertiary);
}

/* Header Filter Dark Mode */
.dt-dark-mode .dt-header-filter-input {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dt-header-filter-input:focus {
    border-color: var(--dt-dark-accent-primary);
    box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}
.dt-dark-mode .dt-header-filter-select { /* This is a dt-common-select, already styled */
    /* border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary); */
}
/* .dt-dark-mode .dt-header-filter-select:focus {
    border-color: var(--dt-dark-accent-primary);
    box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
} */

/* Header Multi-select Filter Dark Mode */
.dt-dark-mode .dt-header-multiselect {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dt-multiselect-dropdown {
    background-color: var(--dt-dark-input-bg); /* Dropdown bg */
    border: 1px solid var(--dt-dark-border-secondary); /* Slightly different border for dropdown */
    border-top: none;
}
.dt-dark-mode .dt-multiselect-item:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-multiselect-item label {
    color: var(--dt-dark-text-primary);
}
/* Checkbox styling in multiselect might need attention if native ones look bad on dark bg */
/* .dt-dark-mode .dt-multiselect-item input[type="checkbox"] { ... } */

/* Global Multi-select Filter (dark mode) */
/* .dt-global-multiselect uses .dt-custom-select, so its dark mode is handled by .dt-dark-mode .dt-custom-select */
.dt-dark-mode .dt-global-multiselect .dt-custom-options .dt-multiselect-item:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-global-multiselect .dt-custom-options .dt-multiselect-item label {
    color: var(--dt-dark-text-primary);
}


.dt-dark-mode .dynamic-table tbody td {
    border-bottom: 1px solid var(--dt-dark-border-primary);
    color: var(--dt-dark-text-secondary);
}
.dt-dark-mode .dynamic-table tbody td.dt-value-positive {
    color: var(--dt-dark-accent-secondary);
}
.dt-dark-mode .dynamic-table tbody td.dt-value-negative {
    color: var(--dt-dark-accent-negative);
}
.dt-dark-mode .dynamic-table tbody tr:nth-child(even) {
    background-color: var(--dt-dark-bg-secondary);
}
.dt-dark-mode .dynamic-table tbody tr:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dynamic-table .message-row td {
    color: var(--dt-dark-text-secondary);
    background-color: var(--dt-dark-bg-primary) !important;
}

/* Pagination dark mode */
.dt-dark-mode .dynamic-table-pagination {
    border-top: 1px solid var(--dt-dark-border-primary);
}
.dt-dark-mode .dynamic-table-rows-per-page-control label {
    color: var(--dt-dark-text-secondary);
}
/* .dt-dark-mode .dynamic-table-rows-per-page-control .dt-common-select is already handled */

.dt-dark-mode .dynamic-table-pagination button {
    border: 1px solid var(--dt-dark-border-secondary);
    background-color: var(--dt-dark-button-bg);
    color: var(--dt-dark-button-text);
}
.dt-dark-mode .dynamic-table-pagination button:hover:not(:disabled) {
    background-color: var(--dt-dark-button-hover-bg);
    color: var(--dt-dark-button-hover-text);
    border-color: var(--dt-dark-accent-primary);
}
.dt-dark-mode .dynamic-table-pagination button:disabled {
    color: var(--dt-dark-text-secondary);
    background-color: var(--dt-dark-bg-tertiary); /* Use a dark tertiary bg for disabled */
    border-color: var(--dt-dark-border-primary);
    opacity: 0.5; /* Make it more obviously disabled */
}
.dt-dark-mode .dynamic-table-pagination span {
    color: var(--dt-dark-text-secondary);
}

/* Custom Dropdown Dark Mode (for flag filters, global multiselects) */
.dt-dark-mode .dt-custom-select {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary); /* Text for the trigger value */
}
.dt-dark-mode .dt-custom-select:focus {
    border-color: var(--dt-dark-accent-primary);
    box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}
.dt-dark-mode .dt-custom-options {
    background-color: var(--dt-dark-input-bg); /* Dropdown bg */
    border: 1px solid var(--dt-dark-border-secondary); /* Slightly different for dropdown */
    border-top: none;
}
.dt-dark-mode .dt-custom-option {
    color: var(--dt-dark-text-primary); /* Text color for options */
}
.dt-dark-mode .dt-custom-option:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-custom-option.selected {
    background-color: var(--dt-dark-bg-tertiary); /* Or a slightly different shade if needed */
    /* font-weight: bold; is already applied */
}
/* Unicode flags in .dt-custom-option might need color adjustment if they are text-based */
/* span.fi (image based flags) should be fine */


/* Column Visibility Selector Dark Mode */
.dt-dark-mode .dt-column-selector-button {
    border: 1px solid var(--dt-dark-input-border);
    background-color: var(--dt-dark-input-bg);
    color: var(--dt-dark-text-primary);
}
.dt-dark-mode .dt-column-selector-button:hover {
    border-color: var(--dt-dark-border-secondary); /* Darker border on hover */
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-column-selector-button:focus {
    border-color: var(--dt-dark-accent-primary);
    box-shadow: 0 0 0 2px var(--dt-dark-input-focus-shadow);
}
.dt-dark-mode .dt-column-selector-dropdown {
    background-color: var(--dt-dark-input-bg);
    border: 1px solid var(--dt-dark-border-secondary);
    border-top-color: var(--dt-dark-border-primary);
    box-shadow: 0 4px 8px rgba(0,0,0,0.25); /* Darker shadow for dark mode */
}
.dt-dark-mode .dt-column-selector-item:hover {
    background-color: var(--dt-dark-bg-tertiary);
}
.dt-dark-mode .dt-column-selector-item label {
    color: var(--dt-dark-text-primary);
}
/* Checkboxes in .dt-column-selector-item might need specific styling for dark mode */
/* .dt-dark-mode .dt-column-selector-item input[type="checkbox"] { ... } */
