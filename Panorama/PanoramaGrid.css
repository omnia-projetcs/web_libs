/* PanoramaGrid.css - Styles for the Custom Grid Layout Library */

.panorama-grid-custom-container {
    display: grid; /* Using CSS Grid for the container */
    grid-template-columns: repeat(var(--pg-columns, 12), 1fr); /* Default 12 columns, customizable via CSS var */
    gap: var(--pg-gap, 10px); /* Default gap, customizable */
    padding: var(--pg-padding, 10px); /* Padding for the container */
    background-color: #f0f0f0; /* Example background */
    border: 1px solid #d0d0d0;
    border-radius: 4px;
    min-height: 200px; /* Example minimum height */
}

.panorama-grid-custom-item {
    background-color: #ffffff;
    border: 1px solid #cccccc;
    border-radius: 4px;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
    overflow: visible; /* Ensures popups are not clipped */
    position: relative; /* For potential absolute positioned children or pseudo-elements */

    /* Grid positioning will be set by JS via style attributes:
       grid-column-start, grid-row-start, grid-column-end, grid-row-end (or spans)
    */
}

.panorama-grid-custom-item-content {
    padding: 10px;
    display: flex;
    flex-direction: column;
    justify-content: flex-start; /* Changed from center to allow natural top-to-bottom flow */
    align-items: stretch;       /* Changed from center to allow content to take full width */
    flex-grow: 1;
    overflow: auto; /* Allow scrolling for content that exceeds the item's bounds */
    height: 100%; /* Ensure it utilizes the height of .panorama-grid-custom-item */
    box-sizing: border-box; /* Padding should not add to the 100% height */
}

.panorama-grid-custom-item.pg-dragging {
    opacity: 0.7;
    cursor: grabbing;
    z-index: 1000; /* Ensure it's above other items */
    /* box-shadow: 0 4px 8px rgba(0,0,0,0.2); */ /* Optional: enhanced shadow */
}

/* Resize Handle Styles */
.pg-resize-handle {
    position: absolute;
    width: 10px;  /* Adjust size as needed */
    height: 10px; /* Adjust size as needed */
    background-color: rgba(0, 0, 0, 0.2); /* Subtle handle color */
    border: 1px solid rgba(0, 0, 0, 0.3);
    box-sizing: border-box;
    opacity: 0; /* Hidden by default, show on hover/selection */
    transition: opacity 0.2s ease-in-out;
}

/* Show handles when parent item is hovered */
.panorama-grid-custom-item:hover .pg-resize-handle {
    opacity: 1;
}

/* Individual Handle Positioning and Cursors */
.pg-resize-handle-n {
    top: -5px; left: 50%; transform: translateX(-50%); cursor: ns-resize;
}
.pg-resize-handle-s {
    bottom: -5px; left: 50%; transform: translateX(-50%); cursor: ns-resize;
}
.pg-resize-handle-e {
    right: -5px; top: 50%; transform: translateY(-50%); cursor: ew-resize;
}
.pg-resize-handle-w {
    left: -5px; top: 50%; transform: translateY(-50%); cursor: ew-resize;
}
.pg-resize-handle-nw {
    top: -5px; left: -5px; cursor: nwse-resize;
}
.pg-resize-handle-ne {
    top: -5px; right: -5px; cursor: nesw-resize;
}
.pg-resize-handle-sw {
    bottom: -5px; left: -5px; cursor: nesw-resize;
}
.pg-resize-handle-se {
    bottom: -5px; right: -5px; cursor: nwse-resize;
}

.panorama-grid-custom-item.pg-resizing {
    /* Optional: Add a border or outline to indicate resizing */
    outline: 2px dashed #007bff;
    opacity: 0.9; /* Slightly different from dragging if desired */
}

.pg-drag-placeholder {
    background-color: rgba(0, 123, 255, 0.1); /* Semi-transparent blue */
    border: 1px dashed #007bff;   /* New border: 1px dashed */
    border-radius: 4px;
    box-sizing: border-box;
    z-index: 1; /* Below dragged item (which is ~1000), above other items */
    pointer-events: none; /* Should not interfere with mouse events */
    /* Ensure it doesn't have padding that affects its perceived size vs item */
}
