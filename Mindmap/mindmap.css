body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Modern font stack */
  margin: 0;
  padding: 10px;
  background-color: #e9ebee; /* Lighter, softer background */
  color: #333; /* Default text color */
  line-height: 1.6;
}

#controls {
  margin-bottom: 15px;
  padding: 12px 15px; /* Slightly more padding */
  background-color: #ffffff; /* White background for controls */
  border-radius: 8px; /* Softer corners */
  box-shadow: 0 2px 5px rgba(0,0,0,0.08); /* Softer shadow */
  display: flex;
  flex-wrap: wrap;
  gap: 12px; /* Consistent gap */
  align-items: center;
}

#node-text-input {
  padding: 10px; /* Increased padding */
  border: 1px solid #ccd0d5; /* Softer border */
  border-radius: 6px; /* Softer corners */
  flex-grow: 1;
  min-width: 200px;
  font-size: 1em;
}
#node-text-input:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0,123,255,.25);
}

/* General button styling for #controls bar */
#controls button {
  padding: 10px 18px; /* Increased padding */
  color: white;
  border: none;
  border-radius: 6px; /* Softer corners */
  cursor: pointer;
  white-space: nowrap;
  font-size: 0.95em;
  transition: background-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out; /* Smooth transitions */
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}
#controls button:hover {
  box-shadow: 0 2px 5px rgba(0,0,0,0.15);
  filter: brightness(110%); /* Slight brightness increase on hover */
}
#controls button:active {
  filter: brightness(95%);
  box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
}


#add-node-btn { background-color: #42b72a; /* Updated Green (like Facebook's green) */ }
#save-locally-btn { background-color: #1877f2; /* Updated Blue (like Facebook's blue) */ }
#clear-local-storage-btn { background-color: #fa383e; /* Updated Red */ }
#save-to-server-btn { background-color: #ffb928; /* Updated Amber */ color: #212529; }
#load-from-server-btn { background-color: #1da1f2; /* Twitter Blue / Info */ }


.feedback-message {
  padding: 12px 18px; /* Increased padding */
  margin: 15px 0;
  border-radius: 6px; /* Softer corners */
  text-align: center;
  font-weight: 500; /* Slightly less bold */
  font-size: 0.98em;
  border: 1px solid transparent; /* Base border */
}
.feedback-message.success {
  background-color: #d4edda; color: #155724; border-color: #c3e6cb;
}
.feedback-message.error {
  background-color: #f8d7da; color: #721c24; border-color: #f5c6cb;
}

#mindmap-container {
  position: relative; padding: 20px; display: flex; flex-direction: column;
  align-items: center; min-height: 400px; /* Increased min-height */
  background-color: #f7f7f7; /* Slightly off-white for mindmap area */
  border-radius: 8px; /* Softer corners */
  box-shadow: 0 2px 8px rgba(0,0,0,0.07);
  margin-top: 15px;
}

/* Styling for the Root Node */
.mindmap-node[data-id="root"] {
  background-color: #e0e0e0; /* Distinct background for root */
  border: 2px solid #007bff; /* Prominent border for root */
  padding: 20px; /* More padding for root */
}
.mindmap-node[data-id="root"] > .node-text {
  font-size: 1.3em; /* Larger text for root */
  font-weight: 600; /* Bolder text for root */
  color: #007bff;
}


.mindmap-node {
  border: 1px solid #d1d1d1; /* Softer border */
  padding: 15px; margin: 10px; border-radius: 8px; /* Softer corners */
  background-color: #ffffff; /* White background for nodes */
  text-align: center; position: relative;
  box-shadow: 0 2px 4px rgba(0,0,0,0.06); /* Softer shadow */
  min-width: 220px; max-width: 480px;
  display: flex; flex-direction: column; align-items: center;
  transition: box-shadow 0.2s ease-in-out;
}
.mindmap-node:hover {
  box-shadow: 0 4px 12px rgba(0,0,0,0.1); /* Enhanced shadow on hover for node */
}

.node-text {
  cursor: pointer; display: inline-block; padding: 6px 8px; /* Adjusted padding */
  font-weight: 600; /* Bolder text */
  margin-bottom: 10px;
  color: #1c1e21; /* Darker text */
  border-radius: 4px;
  transition: background-color 0.2s ease;
}
.node-text:hover { background-color: #f0f2f5;  } /* Subtle hover for text edit area */

.node-image {
  max-width: 100%; max-height: 280px; margin-top: 8px; margin-bottom: 12px;
  border-radius: 6px; border: 1px solid #e0e0e0; /* Softer border */
  object-fit: contain; /* Ensure image aspect ratio is maintained */
}

.node-notes {
  font-size: 0.92em; color: #4b4f56; margin-top: 8px; margin-bottom: 12px; padding: 10px;
  background-color: #f5f6f7; border-left: 4px solid #1877f2; /* Updated color */
  text-align: left; white-space: pre-wrap; max-width: 100%;
  overflow-wrap: break-word; align-self: stretch; border-radius: 0 4px 4px 0; /* Rounded corners on one side */
}

.node-table {
  margin-top: 12px; margin-bottom: 12px; border-collapse: separate; /* Use separate for border-radius */
  border-spacing: 0; /* Required for border-radius on cells with separate */
  width: auto; max-width: 100%; font-size: 0.88em; align-self: stretch; overflow-x: auto;
  border: 1px solid #e0e0e0; border-radius: 6px; /* Border around table */
}
.node-table th, .node-table td { border-bottom: 1px solid #e0e0e0; padding: 8px 10px; text-align: left; }
.node-table th { background-color: #f0f2f5; font-weight: 600; }
.node-table tr:last-child td { border-bottom: none; } /* Remove bottom border for last row */
.node-table th:first-child, .node-table td:first-child { border-left: none; } /* Optional: remove for cleaner look if table has outer border */
.node-table th:last-child, .node-table td:last-child { border-right: none; }


.node-chart-container {
  width: calc(100% - 10px); /* Ensure padding is accounted for */
  min-height: 180px; max-height: 320px; margin-top: 12px; margin-bottom: 12px;
  padding: 5px; border: 1px dashed #ced4da; /* Softer dashed border */
  display: flex; justify-content: center; align-items: center;
  font-size: 0.9em; color: #555; overflow: hidden; border-radius: 6px;
}
.node-chart-container canvas { max-width: 100%; max-height: 100%; }

/* Node Controls Styling */
.node-controls {
  margin-top: 18px; display: flex; flex-wrap: wrap; justify-content: center; gap: 6px; /* Slightly reduced gap */
  padding-top: 10px;
  border-top: 1px solid #e9ebee; /* Separator line for controls */
  width: 100%; /* Make controls take full width */
}
.node-controls button {
  padding: 6px 12px; font-size: 0.82em; /* Smaller buttons for nodes */
  border: 1px solid #ccd0d5; border-radius: 5px; cursor: pointer;
  background-color: #f5f6f7; color: #4b4f56; white-space: nowrap;
  transition: background-color 0.2s ease, border-color 0.2s ease;
}
.node-controls button:hover { background-color: #e9ebee; border-color: #b0b3b8; }
.node-controls button:active { background-color: #dddfe2; }

.delete-node-btn {
  background-color: #fa383e !important; color: white !important; border-color: #fa383e !important;
}
.delete-node-btn:hover { background-color: #e02020 !important; border-color: #d01010 !important; }

/* Visual Cues for Hierarchy */
.mindmap-children-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: flex-start;
  margin-top: 15px; /* Reduced margin */
  padding-left: 25px; /* Indentation for children container */
  position: relative; /* For pseudo-element line */
}

/* Simple line connecting to children area - adjust as needed */
.mindmap-children-container::before {
  content: '';
  position: absolute;
  left: 10px; /* Adjust to align with parent node's center or edge */
  top: -10px; /* Start from just above the container */
  bottom: 15px; /* Extend down to the first row of children or so */
  width: 2px;
  background-color: #d1d1d1; /* Line color */
  z-index: -1; /* Send behind nodes if necessary */
}

.mindmap-node .mindmap-children-container {
  /* If children are directly under a node, this adds further indentation */
   /* padding-left: 20px; */ /* Already handled by above .mindmap-children-container */
}

/* Media Query for smaller screens - basic responsiveness for controls */
@media (max-width: 768px) {
  #controls {
    flex-direction: column; /* Stack main controls vertically */
    align-items: stretch; /* Make buttons take full width */
  }
  #node-text-input {
    width: calc(100% - 20px); /* Adjust for padding */
    margin-bottom: 10px; /* Space when stacked */
  }
  #controls button {
    width: 100%; /* Full width buttons */
  }
  .mindmap-children-container {
    flex-direction: column; /* Stack children vertically on small screens */
    align-items: center; /* Center children when stacked */
    padding-left: 10px; /* Adjust indentation for vertical stacking */
  }
  .mindmap-children-container::before {
     left: 5px; /* Adjust line for vertical stacking */
  }
}
